
// Generated by dojo-bindgen on Sat, 7 Sep 2024 19:09:24 +0000. Do not modify this file manually.
// Import the necessary types from the recs SDK
// generate again with `sozo build --typescript` 
import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;



// Type definition for `dojo::model::layout::Layout` enum
export type Layout = { type: 'Fixed'; value: RecsType.NumberArray; } | { type: 'Struct'; value: RecsType.StringArray; } | { type: 'Tuple'; value: RecsType.StringArray; } | { type: 'Array'; value: RecsType.StringArray; } | { type: 'ByteArray'; } | { type: 'Enum'; value: RecsType.StringArray; };

export const LayoutDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `rl_chess::types::profile::ProfilePicType` enum
export type ProfilePicType = { type: 'Undefined'; } | { type: 'Native'; } | { type: 'External'; };

export const ProfilePicTypeDefinition = {
    type: RecsType.String,
    value: RecsType.String
};
        
// Type definition for `dojo::model::layout::FieldLayout` struct
export interface FieldLayout {
    selector: BigInt;
    layout: Layout;
    
}
export const FieldLayoutDefinition = {
    selector: RecsType.BigInt,
    layout: LayoutDefinition,
    
};

// Type definition for `rl_chess::models::index::Player` struct
export interface Player {
    address: BigInt;
    name: BigInt;
    profile_pic_type: ProfilePicType;
    profile_pic_uri: Number;
    timestamp: Number;
    
}
export const PlayerDefinition = {
    address: RecsType.BigInt,
    name: RecsType.BigInt,
    profile_pic_type: ProfilePicTypeDefinition,
    profile_pic_uri: RecsType.Number,
    timestamp: RecsType.Number,
    
};

// Type definition for `core::byte_array::ByteArray` struct
export interface ByteArray {
    data: String[];
    pending_word: BigInt;
    pending_word_len: Number;
    
}
export const ByteArrayDefinition = {
    data: RecsType.StringArray,
    pending_word: RecsType.BigInt,
    pending_word_len: RecsType.Number,
    
};


export function defineContractComponents(world: World) {
    return {

        // Model definition for `rl_chess::models::index::Player` model
        Player: (() => {
            return defineComponent(
                world,
                {
                    address: RecsType.BigInt,
                    name: RecsType.BigInt,
                    profile_pic_type: RecsType.String,
                    profile_pic_uri: RecsType.Number,
                    timestamp: RecsType.Number,
                },
                {
                    metadata: {
                        namespace: "rl_chess",
                        name: "rl_chess-Player",
                        types: ["ContractAddress", "felt252", "ProfilePicType", "u64", "u64"],
                        customTypes: [],
                    },
                }
            );
        })(),
    };
}
